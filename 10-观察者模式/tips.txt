观察者模式：
	为观察者们设置通知者，当通知者的状态发生改变时会通知观察者们，让他们做出调整。
	基本实现：为通知者与观察者分别设置两个抽象类，子类实现他们，这样可以减少具体类的耦合，通知者
		通过notify方法遍历所有通知者，调用他们的update方法，这样就做出了改变。
	
	结论：我目前实现的这个观察者模式代码，我认为还存在一些问题，比如当通知者要保存对观察者们的引用，当然，这个我觉得
	是可以理解的，但是，如果要让观察者保存通知者的信息时，虽然功能可以实现。但是代码上会存在两个不该有的重复代码，因为
	我觉得通过一次绑定就应该实现双向绑定，不然，如果忘记了或者绑定错了导致两者不一致，这是严重的bug。
	还有目前我这个只支持一个观察者对应一个通知者，一个通知者可以对应多个观察者。
・	C#中的事件机制，C++实现我并不会emmm，所以观察者模式加事件机制就鸽了。
	
	有待改进。。。